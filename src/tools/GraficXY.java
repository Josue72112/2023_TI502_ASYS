/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tools;

import java.awt.Color;
import java.awt.Graphics2D;

/**
 *
 * @author josue
 */
public class GraficXY extends javax.swing.JFrame {

    /**
     * Creates new form GraficXY
     */
    public GraficXY() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnDraw = new javax.swing.JButton();
        pnlDraw = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                formAncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnDraw.setText("Draw");
        btnDraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDrawActionPerformed(evt);
            }
        });
        getContentPane().add(btnDraw, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 80, -1, -1));

        pnlDraw.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlDrawMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlDrawLayout = new javax.swing.GroupLayout(pnlDraw);
        pnlDraw.setLayout(pnlDrawLayout);
        pnlDrawLayout.setHorizontalGroup(
            pnlDrawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        pnlDrawLayout.setVerticalGroup(
            pnlDrawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        getContentPane().add(pnlDraw, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, 300, 300));
        pnlDraw.getAccessibleContext().setAccessibleDescription("");

        setBounds(0, 0, 654, 487);
    }// </editor-fold>//GEN-END:initComponents

    private void formAncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_formAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_formAncestorMoved
    private void drawAxis(){
        Graphics2D g = (Graphics2D) pnlDraw.getGraphics();
        
        g.setColor(new Color (24, 62, 12));
        g.fillRect(0, 0, Coordinate.WIDTH, Coordinate.HEIGTH);
        
        // DROW = axis (
        g.setColor(Color.WHITE);
        g.drawLine(
                Coordinate.toScreenX(Coordinate.XMIN),
                Coordinate.toScreenY(0),
                Coordinate.toScreenX(Coordinate.XMAX),
                Coordinate.toScreenY(0)
        
        );
        g.setColor(Color.WHITE);
        g.drawLine(
                Coordinate.toScreenX(0),
                Coordinate.toScreenY(Coordinate.YMIN),
                Coordinate.toScreenX(0),
                Coordinate.toScreenY(Coordinate.YMAX)
        
        );
        
        // 
        for(float dx = Coordinate.XMIN; dx <= Coordinate.XMAX; dx += 1.0f){
            g.drawLine(
                    Coordinate.toScreenX(dx),
                    Coordinate.toScreenY(-0.25f),
                    Coordinate.toScreenX(dx),
                    Coordinate.toScreenY(-0.25f)
                     );
        }
        for(float dx = Coordinate.XMIN; dx <= Coordinate.XMAX; dx += 1.0f){
            g.drawLine(
                    Coordinate.toScreenX(-0.25f),
                    Coordinate.toScreenY(dx),
                    Coordinate.toScreenX(-0.25f),
                    Coordinate.toScreenY(dx)
                     );
        }
    }
        
        private void drawFuntion(){
           int nPoints = 100;
           float x[] = new float[nPoints];
           float y[] = new float[nPoints];
           float dy[] = new float[nPoints];
           float Iy[] = new float[nPoints];
           
           float dx = (Coordinate.XMAX - Coordinate.XMIN)/nPoints;
           
           for(int i = 0; i< nPoints; i++){
               x[i] = Coordinate.XMIN + i * dx;
               y[i] = 0.1f * x[i]*x[i];
               dy[i] = 0.2f *x[i];
               Iy[i] = 0.0333f * x[i]* x[i] * x[i];
           }
           
           Graphics2D g = (Graphics2D) pnlDraw.getGraphics();
           for(int i = 0; i< nPoints; i ++){
               g.setColor(Color.WHITE);
               g.drawLine(
                       
               );
           }
           
           
           
        }
    
    private void btnDrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDrawActionPerformed
        drawAxis();// TODO add your handling code here:
    }//GEN-LAST:event_btnDrawActionPerformed

    private void pnlDrawMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDrawMouseClicked
        drawAxis();// TODO add your handling code here:
    }//GEN-LAST:event_pnlDrawMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GraficXY.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GraficXY.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GraficXY.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GraficXY.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GraficXY().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDraw;
    private javax.swing.JPanel pnlDraw;
    // End of variables declaration//GEN-END:variables
}
